import streamlit as st
import time
import random

st.set_page_config(
    page_title="ChefBot",
    page_icon="https://img.freepik.com/premium-photo/cute-robot-chef_996086-13554.jpg",
    layout="wide"
)

# ‡πÄ‡∏Å‡πá‡∏ö‡∏´‡∏ô‡πâ‡∏≤ ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô, ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó, ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏ó
if "page" not in st.session_state:
    st.session_state.page = "home"
if "messages" not in st.session_state:
    st.session_state.messages = []
if "uploaded_image" not in st.session_state:
    st.session_state.uploaded_image = None
if "chat_history" not in st.session_state:
    st.session_state.chat_history = []

# CSS ‡πÅ‡∏ï‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏û‡∏à
page_style = """
    <style>
    /* ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ */
    body { color: #E8E8E8; } 
    .stApp { background-color: #E8E8E8; } /* ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≤‡∏ß */
    
    /* Sidebar */
    [data-testid="stSidebar"] {
        background-color: #E8E8E8; 
        border-right: 1px solid #DDDDDD;
    }
    
    /* ‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ó‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå */
    [data-testid="stContainer"], .main-container {
        background-color: #EAECEE;
        border: 1px solid #D5D8DC;
        border-radius: 0.75rem;
        box-shadow: 0 4px 10px rgba(0,0,0,0.05);
    }
    .main-container { padding: 2rem; }
    [data-testid="stContainer"] {
        min-height: 350px;
        display: flex;
        flex-direction: column;
    }

    /* Header */
    h1, h2, h3, h4, h5, h6 { color: #000000; } 
    h1 { text-align: center; }
    
    /* Button */
    .stButton>button {
        background-color: #007BFF;
        color: #FFFFFF;
        border: none;
        border-radius: 0.5rem;
        font-weight: bold;
        padding: 0.75rem 1.5rem;
    }
    .stButton>button:hover { 
        background-color: #0056b3;
        color: #FFFFFF; 
    }
    
    /* Chat bubble */
    .message-container { display: flex; align-items: flex-end; margin-bottom: 1rem; gap: 10px; }
    .user-container { justify-content: flex-end; }
    .avatar { width: 40px; height: 40px; border-radius: 50%; object-fit: cover; }
    .assistant-bubble, .user-bubble { display: inline-block; padding: 10px 18px; border-radius: 20px; max-width: 80%; text-align: left; word-wrap: break-word; }
    .assistant-bubble { background-color: #888E95; color: white; }
    .user-bubble { background-color: #007BFF; color: white; }
    [data-testid="stChatMessage"] { display: none; }


    /* History chat */
    .history-item { background-color: #EAECEE; border-radius: 0.5rem; padding: 0.75rem 1rem; margin-bottom: 0.5rem; font-size: 0.95rem; }

    </style>
"""
st.markdown(page_style, unsafe_allow_html=True)


# Helper Functions
def archive_current_chat():
    """
    ‡πÄ‡∏Å‡πá‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏•‡∏á‡πÉ‡∏ô chat_history
    ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç: ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1 ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    ‡πÅ‡∏•‡∏∞‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏ã‡πâ‡∏≥ (‡∏ñ‡πâ‡∏≤‡∏≠‡∏±‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥)
    """
    if len(st.session_state.messages) > 1:
        if not st.session_state.chat_history or st.session_state.chat_history[0] != st.session_state.messages:
            st.session_state.chat_history.insert(0, st.session_state.messages.copy())

def load_chat(index):
    """
    ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ (‡∏à‡∏≤‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥) ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á
    - ‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î ‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å archive_current_chat() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏´‡∏≤‡∏¢
    - ‡∏ï‡∏±‡πâ‡∏á session_state.messages ‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏ó‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô chat
    - ‡πÉ‡∏ä‡πâ st.rerun() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤
    """
    archive_current_chat()
    st.session_state.messages = st.session_state.chat_history[index]
    st.session_state.page = "chat"
    st.rerun()

def go_to_home():
    """
    ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å (home)
    - ‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏ä‡∏ó‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô
    - ‡∏•‡πâ‡∏≤‡∏á messages ‡πÅ‡∏•‡∏∞ uploaded_image ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
    """
    archive_current_chat()
    st.session_state.messages = []
    st.session_state.uploaded_image = None
    st.session_state.page = "home"
    st.rerun()

# --- Sidebar ---
with st.sidebar:

    st.image("https://img.freepik.com/premium-photo/cute-robot-chef_996086-13554.jpg", width=250)
    st.title("ChefBot")
    st.markdown("---")
    # ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà 
    st.button("‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà", on_click=go_to_home, use_container_width=True)
    st.markdown("---")
    
    st.subheader("‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∏‡∏á")
    
    #  chat_history
    for i, chat in enumerate(st.session_state.chat_history):
        # ‡∏´‡∏≤‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á user ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏™‡∏±‡πâ‡∏ô‡πÜ
        title = next((msg["content"] for msg in chat if msg["role"] == "user"), "‡∏ö‡∏ó‡∏™‡∏ô‡∏ó‡∏ô‡∏≤")
        st.button(
            f"üìú {title[:25]}..." if len(title) > 25 else f"üìú {title}",
            key=f"history_{i}",
            on_click=load_chat,
            args=(i,),
            use_container_width=True
        )


### --- ‡∏´‡∏ô‡πâ‡∏≤ HOME ---
if st.session_state.page == "home":
    with st.container(border=True):
        st.title("‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ChefBot ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ üç≥")
        st.markdown("<h3 style='text-align: center;'>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì</h3>", unsafe_allow_html=True)

    st.markdown("<br>", unsafe_allow_html=True) 

    col1, col2 = st.columns(2, gap="large")

    # ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ã‡πâ‡∏≤‡∏¢: ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö
    with col1:
        with st.container(border=True):
            st.markdown("<h4 style='text-align: center;'>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö üì∏</h4>", unsafe_allow_html=True)
            uploaded_file = st.file_uploader("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û", type=['png', 'jpg', 'jpeg'], label_visibility="collapsed")
            if uploaded_file:
                # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå ‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ chat ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô binary
                archive_current_chat()
                st.session_state.messages = [{"role": "user", "content": "‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏≤‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ô‡∏µ‡πâ‡∏´‡∏ô‡πà‡∏≠‡∏¢", "image": uploaded_file.getvalue()}]
                st.session_state.page = "chat"
                st.rerun()
            else:
                st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î")

    # ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏Ç‡∏ß‡∏≤: ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏™‡∏°‡πÄ‡∏≠‡∏á
    with col2:
        with st.container(border=True):
            st.markdown("<h4 style='text-align: center;'>‡∏û‡∏¥‡∏°‡∏û‡πå‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏™‡∏°‡πÄ‡∏≠‡∏á ‚úçÔ∏è</h4>", unsafe_allow_html=True)
            ingredients = st.text_input("‡∏£‡∏∞‡∏ö‡∏∏‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏™‡∏° ‡∏Ñ‡∏±‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏à‡∏∏‡∏•‡∏†‡∏≤‡∏Ñ (,)", placeholder="‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏°‡∏π, ‡∏´‡∏≠‡∏°‡πÉ‡∏´‡∏ç‡πà, ...")
            # ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏π‡∏ï‡∏£: ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏™‡∏° ‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á prompt ‡πÅ‡∏£‡∏Å‡πÅ‡∏•‡∏∞‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ chat
            if st.button("‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£", use_container_width=True, type="primary"):
                if ingredients:
                    archive_current_chat()
                    first_prompt = f"‡∏â‡∏±‡∏ô‡∏°‡∏µ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏Ñ‡∏∑‡∏≠: {ingredients} ‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏ô‡πà‡∏≠‡∏¢"
                    st.session_state.messages = [{"role": "user", "content": first_prompt}]
                    st.session_state.page = "chat"
                    st.rerun()
                else:
                    st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏™‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á")


### --- ‡∏´‡∏ô‡πâ‡∏≤ CHAT ---
elif st.session_state.page == "chat":
    with st.container(border=True):
        st.title("üí¨ ‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏±‡∏ö ChefBot")
    
    st.markdown("<br>", unsafe_allow_html=True) 
    
    # ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà message ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å assistant ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    if not st.session_state.messages:
        st.session_state.messages = [{"role": "assistant", "content": "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏°‡∏µ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ú‡∏°‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏ö‡πâ‡∏≤‡∏á?"}]
    
    # avatar bot ‡πÅ‡∏•‡∏∞ user
    bot_avatar_url = "https://img.freepik.com/premium-photo/cute-robot-chef_996086-13554.jpg"
    user_avatar_url = "https://cdn-icons-png.flaticon.com/512/1377/1377199.png"

    with st.container():
        st.markdown('<div class="main-container">', unsafe_allow_html=True)
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å session_state.messages
        for msg in st.session_state.messages:
            # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏†‡∏≤‡∏û‡πÅ‡∏ô‡∏ö‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏ô‡∏±‡πâ‡∏ô
            if img_data := msg.get("image"):
                st.markdown("<div style='display: flex; justify-content: flex-end;'>", unsafe_allow_html=True)
                st.image(img_data, width=200)
                st.markdown("</div>", unsafe_allow_html=True)

            # ‡πÅ‡∏¢‡∏Å‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ï‡∏≤‡∏° role
            if msg["role"] == "assistant":
                st.markdown(f'<div class="message-container"><img src="{bot_avatar_url}" class="avatar"><div class="assistant-bubble">{msg["content"]}</div></div>', unsafe_allow_html=True)
            elif msg.get("content"): # ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å user (text)
                st.markdown(f'<div class="message-container user-container"><div class="user-bubble">{msg.get("content", "")}</div><img src="{user_avatar_url}" class="avatar"></div>', unsafe_allow_html=True)

        # ‡∏ï‡∏±‡∏ß placeholder ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ï‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ ‡∏°‡∏≤ (typing effect)
        response_placeholder = st.empty()
        st.markdown('</div>', unsafe_allow_html=True)

    # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ú‡πà‡∏≤‡∏ô chat_input ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô messages ‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤
    if prompt := st.chat_input("‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á..."):
        st.session_state.messages.append({"role": "user", "content": prompt})
        st.rerun()
    
    # ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á user ‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    if st.session_state.messages and st.session_state.messages[-1]["role"] == "user":
        
        full_response = ""
        last_message_content = st.session_state.messages[-1]['content']
        assistant_responses = [
            "‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏•‡∏≠‡∏á‡∏ó‡∏≥ **'‡∏ú‡∏±‡∏î‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö‡πÑ‡∏Ç‡πà‡∏î‡∏≤‡∏ß'** ‡∏î‡∏π‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö?",
            f"‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö '{last_message_content}' ‡∏ú‡∏°‡∏Ç‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÄ‡∏°‡∏ô‡∏π **'‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏ô‡πâ‡∏≥‡∏Ç‡πâ‡∏ô'** ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ã‡∏î‡∏£‡πâ‡∏≠‡∏ô‡πÜ ‡∏Ñ‡∏•‡πà‡∏≠‡∏á‡∏Ñ‡∏≠‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô",
            "‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö **'‡πÑ‡∏Å‡πà‡∏ú‡∏±‡∏î‡πÄ‡∏°‡πá‡∏î‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á'** ‡∏°‡∏≤‡∏Å‡πÜ ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡∏™‡∏ô‡πÉ‡∏à‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö?"
        ]
        response_text = random.choice(assistant_responses)
        
        for chunk in response_text.split():
            full_response += chunk + " "
            time.sleep(0.05)

            with response_placeholder.container():
                 st.markdown(f'<div class="message-container"><img src="{bot_avatar_url}" class="avatar"><div class="assistant-bubble">{full_response} ‚ñå</div></div>', unsafe_allow_html=True)
        
        with response_placeholder.container():
            st.markdown(f'<div class="message-container"><img src="{bot_avatar_url}" class="avatar"><div class="assistant-bubble">{full_response}</div></div>', unsafe_allow_html=True)

        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å chat
        st.session_state.messages.append({"role": "assistant", "content": full_response})
        # ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ UI ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà
        st.rerun()
